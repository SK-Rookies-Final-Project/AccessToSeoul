plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'com.example'          // 필요 시 변경
version = '1.0.0'


java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
    maven { url 'https://packages.confluent.io/maven' }

}

dependencies {
    implementation 'org.apache.kafka:kafka-clients:3.7.0'
    // (선택) 로그 출력 개선
    implementation 'org.slf4j:slf4j-simple:2.0.13'
    testImplementation 'junit:junit:4.13.2'
    implementation 'io.confluent:kafka-client-plugins:7.7.1-ce'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.2'
    implementation 'org.glassfish.jersey.core:jersey-common:2.41'
    implementation 'org.glassfish.jersey.core:jersey-client:2.41'
    implementation 'javax.ws.rs:javax.ws.rs-api:2.1.1'
    implementation "io.prometheus:simpleclient:0.16.0"
    implementation "io.prometheus:simpleclient_httpserver:0.16.0"
    implementation "io.prometheus:simpleclient_hotspot:0.16.0"

//    implementation "io.confluent:kafka-clients:7.7.1"
//    implementation "io.confluent:kafka-oauth-client:7.7.1"

//    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
}

application {
    mainClass = 'com.seoul.produce.ProduceAuditTopic'
}

tasks.register('runProduce', JavaExec) {
    group = 'application'
    description = 'Run ProduceAuditTopic'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.seoul.produce.ProduceAuditTopic'
}

tasks.register('runLogin', JavaExec) {
    group = 'application'
    description = 'Run LoginToSeoul'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.seoul.login.LoginToSeoul'
}

tasks.register('runConsume', JavaExec) {
    group = 'application'
    description = 'Run ConsumeAuditTopic'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.seoul.consume.ConsumeAuditTopic'
}

tasks.register('runNotMove', JavaExec) {
    group = 'application'
    description = 'Run NotMove'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.seoul.login.NotMove'
}

tasks.register('runTwoTime', JavaExec) {
    group = 'application'
    description = 'Run TwoTime'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.seoul.login.TwoTime'
}

tasks.test {
    useJUnitPlatform()
}


shadowJar {
    archiveBaseName.set('producer-app')
    archiveClassifier.set('all')
    archiveVersion.set('')
}